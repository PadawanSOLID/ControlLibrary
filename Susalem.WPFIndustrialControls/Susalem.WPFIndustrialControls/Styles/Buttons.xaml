<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ap="clr-namespace:Susalem.WPFIndustrialControls.AttachProperties">

    <Style x:Key="DefaultButton" TargetType="Button">
        <Setter Property="ap:CornerRadiusAP.CornerRadius" Value="3" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="12,5" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="#FFCCCCCC" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding ap:CornerRadiusAP.CornerRadius}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFBFBFC" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="IconButton"
        BasedOn="{StaticResource DefaultButton}"
        TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding ap:CornerRadiusAP.CornerRadius}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Name="icon" Content="{TemplateBinding ap:IconAP.Icon}" />
                            <ContentPresenter
                                Grid.Column="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ap:IconAP.HorizontalPlacement" Value="Right">
                            <Setter TargetName="icon" Property="Grid.Column" Value="2" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFBFBFC" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ImageButton"
        BasedOn="{StaticResource DefaultButton}"
        TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding ap:CornerRadiusAP.CornerRadius}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Name="img" Content="{TemplateBinding ap:IconAP.Image}" />
                            <ContentPresenter
                                Grid.Column="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ap:IconAP.HorizontalPlacement" Value="Right">
                            <Setter TargetName="img" Property="Grid.Column" Value="2" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFBFBFC" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="CircleButton" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="#FFCCCCCC" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Fill="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FFacacac" />
                            <Setter Property="Background" Value="#fffcfcfc" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultToggleButton" TargetType="ToggleButton">
        <Setter Property="ap:CornerRadiusAP.CornerRadius" Value="3" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="12,5" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="#FFCCCCCC" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding ap:CornerRadiusAP.CornerRadius}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="DeepSkyBlue" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#aa00BFFF" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#FFFBFBFC" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CircleToggleButton" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ap:BorderAP.StrokeThickness" Value="2" />
        <Setter Property="BorderBrush" Value="#FFCCCCCC" />
        <Setter Property="Background" Value="White" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid RenderTransformOrigin="{TemplateBinding RenderTransformOrigin}">
                        <Ellipse
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Fill="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding ap:BorderAP.StrokeThickness}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="DeepSkyBlue" />
                            <Setter Property="Background" Value="DeepSkyBlue" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#aa00BFFF" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="#FFacacac" />
                            <Setter Property="Background" Value="#fffcfcfc" />
                        </MultiTrigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="BorderTransitionCircleToggleButton"
        BasedOn="{StaticResource CircleToggleButton}"
        TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Ellipse
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Fill="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding ap:BorderAP.StrokeThickness}" />
                        <Path
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            RenderTransformOrigin="{TemplateBinding RenderTransformOrigin}"
                            Stretch="Uniform"
                            Stroke="Red"
                            StrokeEndLineCap="Round"
                            StrokeStartLineCap="Triangle"
                            StrokeThickness="{TemplateBinding ap:BorderAP.StrokeThickness}">
                            <Path.RenderTransform>
                                <RotateTransform x:Name="rotate" />
                            </Path.RenderTransform>
                            <Path.Data>
                                <GeometryGroup>
                                    <PathGeometry>
                                        <PathGeometry.Figures>
                                            <PathFigure x:Name="pf1" StartPoint="10,0">
                                                <ArcSegment
                                                    x:Name="arc1"
                                                    Point="10,0"
                                                    Size="10,10"
                                                    SweepDirection="Clockwise" />
                                            </PathFigure>
                                            <PathFigure x:Name="pf2" StartPoint="10,20">
                                                <ArcSegment
                                                    x:Name="arc2"
                                                    Point="10,20"
                                                    Size="10,10"
                                                    SweepDirection="Clockwise" />
                                            </PathFigure>
                                        </PathGeometry.Figures>
                                    </PathGeometry>
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>

                                <Storyboard RepeatBehavior="Forever" Duration="0:0:2">
                                    <DoubleAnimation
                                        By="180"
                                        Storyboard.TargetName="rotate"
                                        Storyboard.TargetProperty="Angle" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="arc1"
                                        Storyboard.TargetProperty="RotationAngle"
                                        To="180"
                                        Duration="0:0:1" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="arc2"
                                        Storyboard.TargetProperty="RotationAngle"
                                        To="180"
                                        Duration="0:0:1" />
                                    <PointAnimationUsingPath
                                        Storyboard.TargetName="arc1"
                                        Storyboard.TargetProperty="Point"
                                        Duration="0:0:1">
                                        <PointAnimationUsingPath.PathGeometry>
                                            <PathGeometry>
                                                <PathGeometry.Figures>
                                                    M10,0 A10,10 180 0,1 10,20
                                                </PathGeometry.Figures>
                                            </PathGeometry>
                                        </PointAnimationUsingPath.PathGeometry>
                                    </PointAnimationUsingPath>
                                    <PointAnimationUsingPath
                                        Storyboard.TargetName="arc2"
                                        Storyboard.TargetProperty="Point"
                                        Duration="0:0:1">
                                        <PointAnimationUsingPath.PathGeometry>
                                            <PathGeometry>
                                                <PathGeometry.Figures>
                                                    M10,20 A10,10 180 0,1 10,0
                                                </PathGeometry.Figures>
                                            </PathGeometry>
                                        </PointAnimationUsingPath.PathGeometry>
                                    </PointAnimationUsingPath>
                                    <PointAnimationUsingPath
                                        BeginTime="0:0:1"
                                        Storyboard.TargetName="pf1"
                                        Storyboard.TargetProperty="StartPoint"
                                        Duration="0:0:1">
                                        <PointAnimationUsingPath.PathGeometry>
                                            <PathGeometry>
                                                <PathGeometry.Figures>
                                                    M10,0 A10,10 180 0,1 10,20
                                                </PathGeometry.Figures>
                                            </PathGeometry>
                                        </PointAnimationUsingPath.PathGeometry>
                                    </PointAnimationUsingPath>
                                    <PointAnimationUsingPath
                                        BeginTime="0:0:1"
                                        Storyboard.TargetName="pf2"
                                        Storyboard.TargetProperty="StartPoint"
                                        Duration="0:0:1">
                                        <PointAnimationUsingPath.PathGeometry>
                                            <PathGeometry>
                                                <PathGeometry.Figures>
                                                    M10,20 A10,10 180 0,1 10,0
                                                </PathGeometry.Figures>
                                            </PathGeometry>
                                        </PointAnimationUsingPath.PathGeometry>
                                    </PointAnimationUsingPath>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="DeepSkyBlue" />
                            <Setter Property="Background" Value="DeepSkyBlue" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#aa00BFFF" />
                            <Setter Property="BorderBrush" Value="#aa00BFFF" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="#FFacacac" />
                            <Setter Property="Background" Value="#fffcfcfc" />
                        </MultiTrigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="TechButton"
        BasedOn="{StaticResource DefaultButton}"
        TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border
                            Padding="5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="2"
                            CornerRadius="5">
                            <Grid
                                ClipToBounds="true"
                                KeyboardNavigation.TabNavigation="Local"
                                SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <!--  Following border is required to catch mouse events  -->


                                <Border
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    CornerRadius="5">
                                    <ContentPresenter
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </Border>
                        <Border
                            Margin="0,10"
                            BorderBrush="#FF425679"
                            BorderThickness="2,0" />
                        <Border
                            Margin="10,0"
                            BorderBrush="#FF425679"
                            BorderThickness="0,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="CheckRotationCircleToggleButton"
        BasedOn="{StaticResource CircleToggleButton}"
        TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid RenderTransformOrigin="{TemplateBinding RenderTransformOrigin}">
                        <Grid.RenderTransform>
                            <RotateTransform x:Name="rotate" />
                        </Grid.RenderTransform>
                        <Ellipse
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Fill="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding ap:BorderAP.StrokeThickness}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="DeepSkyBlue" />
                            <Setter Property="Background" Value="DeepSkyBlue" />
                            <Setter Property="Foreground" Value="White" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            By="-180"
                                            Storyboard.TargetName="rotate"
                                            Storyboard.TargetProperty="Angle"
                                            Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <PowerEase EasingMode="EaseIn" Power="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            BeginTime="0:0:0.5"
                                            By="-360"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="rotate"
                                            Storyboard.TargetProperty="Angle"
                                            Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="rotate"
                                            Storyboard.TargetProperty="Angle"
                                            By="-360"
                                            Duration="0:0:1">
                                            <DoubleAnimation.EasingFunction>
                                                <PowerEase EasingMode="EaseOut" Power="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#aa00BFFF" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="#FFacacac" />
                            <Setter Property="Background" Value="#fffcfcfc" />
                        </MultiTrigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>
</ResourceDictionary>